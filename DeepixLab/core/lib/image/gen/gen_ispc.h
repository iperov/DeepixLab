//
// D:\Develop\python\DeepixLab\_internal\github_project\DeepixLab\core\lib\image\gen\gen_ispc.h
// (Header automatically generated by the ispc compiler.)
// DO NOT EDIT THIS FILE.
//

#pragma once
#include <stdint.h>

#if !defined(__cplusplus)
#if defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901L)
#include <stdbool.h>
#else
typedef int bool;
#endif
#endif



#ifdef __cplusplus
namespace ispc { /* namespace */
#endif // __cplusplus

#ifndef __ISPC_ALIGN__
#if defined(__clang__) || !defined(_MSC_VER)
// Clang, GCC, ICC
#define __ISPC_ALIGN__(s) __attribute__((aligned(s)))
#define __ISPC_ALIGNED_STRUCT__(s) struct __ISPC_ALIGN__(s)
#else
// Visual Studio
#define __ISPC_ALIGN__(s) __declspec(align(s))
#define __ISPC_ALIGNED_STRUCT__(s) __ISPC_ALIGN__(s) struct
#endif
#endif


///////////////////////////////////////////////////////////////////////////
// Functions exported from ispc code
///////////////////////////////////////////////////////////////////////////
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
extern "C" {
#endif // __cplusplus
    extern void bezier(float * img, uint32_t W, uint32_t H, float ax, float ay, float bx, float by, float cx, float cy, float width);
    extern void circle_faded(float * img, uint32_t W, uint32_t H, float cx, float cy, float fs, float fe);
    extern void cut_edges_mask(float * img, uint32_t W, uint32_t H, float angle_deg, float edge_dist, float cx, float cy, float cw, float ch, bool init);
    extern void icon_loading(float * img, uint32_t H, uint32_t W, uint32_t C, float R_inner, float R_outter, float edge_smooth, float * bg_color, float * fg_color, float u_time);
    extern void noise(float * img, uint32_t size, uint32_t seed);
    extern void test_gen(float * out, uint32_t W, uint32_t H, uint32_t seed);
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
} /* end extern C */
#endif // __cplusplus


#ifdef __cplusplus
} /* namespace */
#endif // __cplusplus
